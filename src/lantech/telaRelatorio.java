/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package lantech;

import Classes.Conexao;
import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.Paragraph;
import com.lowagie.text.pdf.PdfWriter;

import javax.swing.*;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rafaella
 */

       
    
  public class telaRelatorio extends javax.swing.JFrame {

    public telaRelatorio() {
        initComponents(); // Método gerado pelo NetBeans para inicializar os componentes gráficos
        System.out.println("Tela de Relatório aberta");
        carregarDadosNaTabela(); // Chama a função para carregar os dados assim que a tela é aberta
    }

    private void carregarDadosNaTabela() {
        DefaultTableModel modelo = (DefaultTableModel) jTableRelatorio.getModel();
        modelo.setRowCount(0); // Limpa a tabela antes de preencher

        Connection conn = null;
        PreparedStatement stmt = null;
        ResultSet rs = null;

        try {
            conn = Conexao.conectar(); // Conectar ao banco de dados

            // Verificação de conexão
            if (conn != null) {
                System.out.println("Conexão estabelecida com sucesso.");
            } else {
                System.out.println("Falha na conexão.");
                return; // Se não houver conexão, retorna para não continuar
            }

            String sql = "SELECT c.nome AS cliente, comp.numero AS computador, " +
                         "'--' AS tempo_uso, " +
                         "DATE_FORMAT(s.data_hora, '%d/%m/%Y %H:%i') AS data " +
                         "FROM sessao s " +
                         "LEFT JOIN cliente c ON s.cliente_id = c.id " +
                         "LEFT JOIN computador comp ON s.computador_id = comp.id";

            stmt = conn.prepareStatement(sql);
            rs = stmt.executeQuery();

            // Verifica se a consulta trouxe dados
            boolean dadosEncontrados = false;

            while (rs.next()) {
                String cliente = rs.getString("cliente");
                String computador = rs.getString("computador");
                String tempoUso = rs.getString("tempo_uso"); // "--" fixo
                String data = rs.getString("data");

                modelo.addRow(new Object[]{cliente, computador, tempoUso, data}); // Adiciona linha na tabela
                dadosEncontrados = true;

                // Imprime os dados no console para verificação
                System.out.println("Cliente: " + cliente + ", Computador: " + computador + ", Data: " + data);
            }

            if (!dadosEncontrados) {
                System.out.println("Nenhum dado encontrado.");
            }

        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro ao listar dados: " + ex.getMessage());
        } finally {
            try {
                if (rs != null) rs.close();
                if (stmt != null) stmt.close();
                if (conn != null) conn.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonexportarpdf = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableRelatorio = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonexportarpdf.setText("Exportar pdf");
        jButtonexportarpdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonexportarpdfActionPerformed(evt);
            }
        });

        jTableRelatorio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Cliente", "Computador", "Tempo Uso", "Data"
            }
        ));
        jScrollPane1.setViewportView(jTableRelatorio);

        jButton4.setText("Voltar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel1.setText("Relatório");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jButtonexportarpdf)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(55, 55, 55))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(jLabel1)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonexportarpdf)
                    .addComponent(jButton4))
                .addGap(101, 101, 101))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonexportarpdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonexportarpdfActionPerformed
            Document document = new Document();


    try {
        // Caminho para a pasta Documentos
        String caminho = System.getProperty("user.home") + "/Documents/relatorio.pdf";
        
        // Cria um FileOutputStream com o caminho desejado
        PdfWriter.getInstance(document, new FileOutputStream(caminho));

        document.open();

        // Conteúdo do PDF
        document.add(new Paragraph("Relatório Lantech"));
        document.add(new Paragraph("-------------------------------"));
        document.add(new Paragraph("Data: " + java.time.LocalDate.now()));
        document.add(new Paragraph("Computadores ativos: 5"));
        document.add(new Paragraph("Faturamento do dia: R$ 180,00"));
        document.add(new Paragraph("Sessões em andamento: 3"));
        document.add(new Paragraph("-------------------------------"));
        document.add(new Paragraph("Relatório gerado com sucesso."));

        // Exibe mensagem de sucesso
        JOptionPane.showMessageDialog(this, "Relatório exportado com sucesso para 'Documentos'!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
    } catch (DocumentException | IOException e) {
        // Em caso de erro, exibe a mensagem de erro
        JOptionPane.showMessageDialog(this, "Erro ao gerar o PDF: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
    } finally {
        // Fecha o documento
        document.close();
    }
    }//GEN-LAST:event_jButtonexportarpdfActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // Fecha a tela atual
    this.dispose();

    // Abre a tela principal
    telaPrincipal telaPrincipal = new telaPrincipal();
    telaPrincipal.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(telaRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(telaRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(telaRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(telaRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new telaRelatorio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButtonexportarpdf;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableRelatorio;
    // End of variables declaration//GEN-END:variables
}

