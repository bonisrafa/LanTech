package lantech;

import Classes.Conexao;
import Classes.cliente;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.math.BigDecimal;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Rafaella
 */
public class telaRegistroUso extends javax.swing.JFrame {

    /**
     * Creates new form telaRegistroUso
     */
    public telaRegistroUso() {
        initComponents();
    }
     private void iniciarSessao() {
        // seu código...
        listarComputadoresOcupados(); // ← deve funcionar aqui
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableComputador = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButtonNovassesao = new javax.swing.JButton();
        jTextFieldcomputador = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTableComputador.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "N* do computador", "Status", "Ação"
            }
        ));
        jScrollPane1.setViewportView(jTableComputador);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Computadores");

        jLabel2.setText("Número");

        jLabel3.setText("Status");

        jLabel4.setText("Ação");

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jButtonNovassesao.setText("Nova sessão");
        jButtonNovassesao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovassesaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldcomputador, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                                    .addComponent(jTextField1)
                                    .addComponent(jTextField2)))
                            .addComponent(jButtonNovassesao))))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldcomputador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jButtonNovassesao)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButtonNovassesaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovassesaoActionPerformed
  String numeroComputador = jTextFieldcomputador.getText().trim();
String status = "Ocupado";
String acao = "Em uso";

if (numeroComputador.isEmpty()) {
    JOptionPane.showMessageDialog(null, "Digite o número do computador!", "Aviso", JOptionPane.WARNING_MESSAGE);
    return;
}

Connection conn = null;
PreparedStatement stmt = null;
ResultSet rs = null;

try {
    conn = Conexao.conectar();

    // Verifica se o computador já está cadastrado
    String sql = "SELECT status FROM computador WHERE numero = ?";
    stmt = conn.prepareStatement(sql);
    stmt.setString(1, numeroComputador);
    rs = stmt.executeQuery();

    if (!rs.next()) {
        // Se não encontrou, pergunta se quer cadastrar
        int opcao = JOptionPane.showConfirmDialog(null,
            "Computador não encontrado! Deseja cadastrá-lo agora?",
            "Cadastrar Computador",
            JOptionPane.YES_NO_OPTION);

        if (opcao == JOptionPane.YES_OPTION) {
            String sqlInsert = "INSERT INTO computador (numero, status) VALUES (?, 'Disponível')";
            PreparedStatement stmtInsert = conn.prepareStatement(sqlInsert);
            stmtInsert.setString(1, numeroComputador);
            stmtInsert.executeUpdate();
            stmtInsert.close();

            JOptionPane.showMessageDialog(null, "Computador cadastrado com sucesso!");

            // Adiciona na tabela da interface
            DefaultTableModel model = (DefaultTableModel) jTableComputador.getModel();
            model.addRow(new Object[]{numeroComputador, status, acao});
        } else {
            return; // Usuário cancelou o cadastro
        }
    } else {
        String statusAtual = rs.getString("status");

        if (statusAtual.equalsIgnoreCase("Ocupado")) {
            JOptionPane.showMessageDialog(null, "Este computador já está em uso!", "Aviso", JOptionPane.WARNING_MESSAGE);
            return;
        }
    }

    // Cria nova sessão (sem cliente)
    String sqlSessao = "INSERT INTO sessao (computador_id, hora_inicio) " +
                       "VALUES ((SELECT id FROM computador WHERE numero = ?), NOW())";
    stmt = conn.prepareStatement(sqlSessao);
    stmt.setString(1, numeroComputador);
    stmt.executeUpdate();

    // Atualiza status do computador
    String sqlUpdate = "UPDATE computador SET status = 'Ocupado' WHERE numero = ?";
    stmt = conn.prepareStatement(sqlUpdate);
    stmt.setString(1, numeroComputador);
    stmt.executeUpdate();

    // Adiciona à tabela da interface
    DefaultTableModel model = (DefaultTableModel) jTableComputador.getModel();
    model.addRow(new Object[]{numeroComputador, status, acao});

    jTextFieldcomputador.setText("");
    JOptionPane.showMessageDialog(null, "Sessão iniciada com sucesso!");

    listarComputadoresOcupados(); // Atualiza a listagem
} catch (SQLException ex) {
    JOptionPane.showMessageDialog(null, "Erro ao registrar sessão: " + ex.getMessage());
} finally {
    try {
        if (rs != null) rs.close();
        if (stmt != null) stmt.close();
        if (conn != null) conn.close();
    } catch (SQLException e) {
        e.printStackTrace();
    }
}
    }//GEN-LAST:event_jButtonNovassesaoActionPerformed
public void listarComputadoresOcupados() {
    DefaultTableModel model = (DefaultTableModel) jTableComputador.getModel();
    model.setRowCount(0); // Limpa a tabela

    String sql = "SELECT numero, status FROM computador WHERE status = 'Ocupado'";

    try (Connection conn = Conexao.conectar();
         PreparedStatement stmt = conn.prepareStatement(sql);
         ResultSet rs = stmt.executeQuery()) {

        while (rs.next()) {
            String numero = rs.getString("numero");
            String status = rs.getString("status");
            String acao = "Em uso";

            model.addRow(new Object[]{numero, status, acao});
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Erro ao listar computadores ocupados: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
    }
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(telaRegistroUso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(telaRegistroUso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(telaRegistroUso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(telaRegistroUso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new telaRegistroUso().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonNovassesao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableComputador;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextFieldcomputador;
    // End of variables declaration//GEN-END:variables
}
